#!/bin/sh

# 引数の取得
before_head=$1
after_head=$2
checkout_type=$3

# 実行されたGitコマンドを取得
git_command=$(ps -ocommand= -p $PPID)

# デバッグ用: フック発火時のコマンド確認（必要ならコメントアウトを外す）
# echo "Triggered by: $git_command" >> /tmp/git_post_checkout_log.txt

# ブランチ作成元（ベースブランチ）を推定
base_branch=$(git name-rev --name-only $before_head 2>/dev/null || echo "master")

# 条件1: 新しいブランチを作成したケース（switch -c / checkout -b）
if ([[ $git_command =~ git[[:space:]]+switch ]] && [[ $git_command =~ ([[:space:]]\-c[[:space:]]) ]]) \
  || ([[ $git_command =~ git[[:space:]]+checkout ]] && [[ $git_command =~ ([[:space:]]\-b[[:space:]]) ]]); then

  if [ "$before_head" = "$after_head" ] && [ "$checkout_type" = "1" ]; then
    # 空コミットを作成
    git commit --allow-empty -m "chore: first commit"

    # 現在のブランチ名を取得
    branch=$(git symbolic-ref --short HEAD)

    # リモートにpush
    git push -u origin "$branch"

    # Draft PRを自動作成（GitHub CLIを使用）
    gh pr create \
      --base "$base_branch" \
      --head "$branch" \
      --title "$branch" \
      --body "Initial draft PR created automatically from $base_branch." \
      --draft
  fi
fi

# 条件2: worktree add によるブランチ作成
if [[ $git_command =~ git[[:space:]]+worktree ]] && [[ $git_command =~ ([[:space:]]add[[:space:]]) ]]; then
  git commit --allow-empty -m "chore: first commit"
  branch=$(git symbolic-ref --short HEAD)
  base_branch=$(git name-rev --name-only $before_head 2>/dev/null || echo "master")
  git push -u origin "$branch"
  gh pr create --base "$base_branch" --head "$branch" --title "$branch" --body "Initial draft PR created automatically from $base_branch." --draft
fi

exit 0
